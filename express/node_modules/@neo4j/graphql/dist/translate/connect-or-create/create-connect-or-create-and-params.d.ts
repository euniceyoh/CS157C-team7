import { RelationField, Context } from "../../types";
import { CypherStatement } from "../types";
import { Node } from "../../classes";
declare type CreateOrConnectInput = {
    where?: {
        node: Record<string, any>;
    };
    onCreate?: {
        node?: Record<string, any>;
        edge?: Record<string, any>;
    };
};
export declare function createConnectOrCreateAndParams({ input, varName, parentVar, relationField, refNode, context, withVars, }: {
    input: CreateOrConnectInput[] | CreateOrConnectInput;
    varName: string;
    parentVar: string;
    relationField: RelationField;
    refNode: Node;
    context: Context;
    withVars: string[];
}): CypherStatement;
export {};
//# sourceMappingURL=create-connect-or-create-and-params.d.ts.map